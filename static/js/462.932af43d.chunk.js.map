{"version":3,"file":"static/js/462.932af43d.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.jsx","components/Contactform/Contactform.jsx","components/Filter/Filter.jsx","components/Pages/Contacts.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, removeContact } from '../../redux/contacts/ContactThunks';\nimport { Box, Typography, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, CircularProgress } from '@mui/material';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts.contacts);\n  const isLoading = useSelector((state) => state.contacts.isLoading);\n  const error = useSelector((state) => state.contacts.error);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = (contactId) => {\n    dispatch(removeContact(contactId));\n  };\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Typography variant=\"body1\" color=\"error\">\n        Error: Something went wrong.\n      </Typography>\n    );\n  }\n\n  return (\n     <Box marginTop={3}>\n      <Typography variant=\"h4\">Contact List</Typography>\n      {contacts.length === 0 ? (\n        <Typography variant=\"body1\">No contacts found.</Typography>\n      ) : (\n        <List>\n          {contacts.map((contact) => (\n            <ListItem key={contact.id}>\n              <ListItemText primary={contact.name} secondary={contact.number} />\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => handleDeleteContact(contact.id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Box>\n  );\n};\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createContact } from 'redux/contacts/ContactThunks';\nimport { TextField, Button, Grid } from '@mui/material';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNumber(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    console.log(contact)\n\n    dispatch(createContact(contact));\n\n    // Очищення полів після відправки форми\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={2} alignItems=\"center\"  marginTop={3}>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            variant=\"outlined\"\n            value={name}\n            onChange={handleNameChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            label=\"Phone Number\"\n            variant=\"outlined\"\n            value={number}\n            onChange={handleNumberChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Add Contact\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterContact } from \"redux/filter/filterSlice\";\n\nimport { TextField, FormControl, InputAdornment } from \"@mui/material\";\nimport { Search } from \"@mui/icons-material\";\nimport { styled } from \"@mui/system\";\nimport { setFilteredContacts } from \"redux/contacts/ContactSlice\";\n\nconst FilterContainer = styled(\"div\")`\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector((state) => state.filter);\n  const contacts = useSelector((state) => state.contacts.contacts);\n\n  const handleFilterChange = (event) => {\n    const searchTerm = event.target.value;\n    dispatch(filterContact(searchTerm));\n\n    const filteredContacts = contacts.filter((contact) => {\n      const name = contact.name.toLowerCase();\n      return name.includes(searchTerm.toLowerCase());\n    });\n    dispatch(setFilteredContacts(filteredContacts));\n  };\n\n  console.log(\"Filter\");\n\n  return (\n    <FilterContainer>\n      <FormControl fullWidth>\n        <TextField\n          id=\"filter-input\"\n          type=\"text\"\n          placeholder=\"Find contacts by name!\"\n          value={filter.filter}\n          onChange={handleFilterChange}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <Search />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </FormControl>\n    </FilterContainer>\n  );\n};\n\nexport default Filter;\n","\nimport ContactList from 'components/ContactList/ContactList'\nimport ContactForm from 'components/Contactform/Contactform'\nimport Filter from 'components/Filter/Filter'\nimport React from 'react'\n\nconst Contacts = () => {\n  return (\n    <div>\n          <ContactForm></ContactForm>\n          <Filter></Filter>\n          <ContactList></ContactList>\n         \n    </div>\n  )\n}\n\nexport default Contacts\n"],"names":["dispatch","useDispatch","contacts","useSelector","state","isLoading","error","useEffect","fetchContacts","Box","display","justifyContent","alignItems","height","CircularProgress","Typography","variant","color","marginTop","length","List","map","contact","ListItem","ListItemText","primary","name","secondary","number","ListItemSecondaryAction","IconButton","edge","onClick","contactId","id","removeContact","Delete","ContactForm","useState","setName","setNumber","onSubmit","event","preventDefault","console","log","createContact","Grid","container","spacing","item","xs","TextField","fullWidth","label","value","onChange","target","Button","type","FilterContainer","styled","filter","FormControl","placeholder","searchTerm","filterContact","filteredContacts","toLowerCase","includes","setFilteredContacts","InputProps","endAdornment","InputAdornment","position","Search"],"sourceRoot":""}